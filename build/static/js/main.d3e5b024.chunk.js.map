{"version":3,"sources":["core/index.ts","core/types/index.ts","core/types/tx.ts","core/hooks/use-interval.ts","pages/app/app.tsx","reportWebVitals.ts","index.tsx"],"names":["TxStatus","useInterval","useState","list","useMemo","setInterval","console","log","App","className","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wHAAA,gJ,+DCAA,6D,6BCAO,IAAKA,EAAZ,kC,SAAYA,K,eAAAA,E,cAAAA,M,oHCECC,EAAc,WAA2B,IAAD,EACzBC,mBAAmB,IADM,mBAC3CC,EAD2C,UAQnD,OALAC,mBAAQ,kBAAMC,aAAY,kBAAMC,QAAQC,IAAI,SAAQ,OAAO,IAKpD,CAAEJ,U,kJCwBIK,MA3Bf,WAAe,IASLL,EAASF,wBAATE,KAER,OACE,qBAAKM,UAAU,MAAf,SACIN,EAAKO,KAAI,SAAAC,GAAI,OAAI,+BAAOA,UCNjBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d3e5b024.chunk.js","sourcesContent":["export * from './constant';\nexport * from './hooks';\nexport * from './types';","export * from './tx';\nexport * from './block';","export enum TxStatus {\n  success = 'true',\n  fail = 'false',\n};\n\nexport interface Tx {\n  hash: string;\n  requirer: string;\n  status: TxStatus;\n  blockNumber: number;\n}","import { useState, useMemo } from 'react';\n\nexport const useInterval = (): { list: number[] } => {\n  const [ list, setList ] = useState<number[]>([])\n\n  useMemo(() => setInterval(() => console.log('aaa'), 2000), []);\n  // useMemo(() => setInterval(() => setList([...list, 1]), 2000), []);\n  // useMemo(() => setTimeout(() => console.log('aaaa'), 2000), []);\n  // useMemo(() => console.log('bbb'), []);\n\n  return { list };\n}","import { Tx, useBlockList, useInterval } from '@core';\nimport React, { useMemo } from 'react';\nimport './app.css';\nimport { BlockInfo } from './block-info';\nimport { Box } from '@material-ui/core';\nimport { TxList } from './tx-list';\n\nfunction App() {\n  // const { list: blockList } = useBlockList();\n  // const txList = useMemo(\n  //   () => {\n  //     // console.log('list', blockList)\n  //     return blockList.reduce((list: Tx[], current) => list.concat(current.txs), []);\n  //   },\n  //   [blockList],\n  // );\n  const { list } = useInterval();\n\n  return (\n    <div className=\"App\">\n      { list.map(item => <span>{item}</span>) }\n      {/* <Box padding=\"20px\" display=\"flex\" justifyContent=\"left\">\n        <Box width=\"500px\">\n          <h2> Checked Transactions </h2>\n          <TxList list={txList}></TxList>\n        </Box>\n        <Box marginLeft=\"350px\">\n          { blockList.map((block, index) => <BlockInfo left={!!(index % 2)} txs={block.txs} from={ block.from } height={block.height} isTail={ !index }></BlockInfo>) }\n        </Box>\n      </Box> */}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/app/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}